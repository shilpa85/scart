{"version":3,"sources":["components/products/ProductItem.js","components/products/Filter.js","components/products/Index.js"],"names":["ProductItem","props","dispatch","useDispatch","cartCount","useSelector","state","products","className","src","product","image","alt","title","discount","length","substr","concat","brand","Number","price","final_price","toFixed","colour","onClick","e","addToCart","Filter","useState","minPrice","setMinPrice","maxPrice","setMaxPrice","colours","setColours","brands","setBrands","discounts","setDiscounts","productList","selectedColors","selectedBrands","useEffect","_colours","_brands","_disounts","_maxDisount","forEach","element","push","color","Set","Object","entries","i","axios","get","then","res","data","_minPrice","values","filter","item","key","_maxPrice","map","value","type","onChange","event","_selectedColors","index","indexOf","splice","selectColors","checked","brandName","_selectedBrands","selectBrands","name","aria-label","displayValue","Products","getAllProducts","id"],"mappings":"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","file":"static/js/3.778b51ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport {  addToCart} from \"../../actions/products\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction ProductItem (props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartCount } = useSelector(state => state.products);\r\n   \r\n    const addToCartHandler = (e) => {\r\n        dispatch(addToCart(cartCount+1));\r\n    }\r\n\r\n    return(\t\t\t\t\r\n            <div className=\"product\">\r\n                <div className=\"product-image\">\r\n                    <img src={props.product.image} alt={props.product.title} />\r\n                    {props.product.discount > 0 &&\r\n                    <span className=\"product-discount\"> {props.product.discount }% </span>\r\n                    }\r\n                </div>\r\n                <div className=\"product-details\">\r\n                    <div className=\"product-left-column\">\r\n                        <h3 className=\"product-name\">\r\n                            {props.product.title.length > 25 ?\r\n                            props.product.title.substr(0, 25).concat('...')\r\n                            : props.product.title}\r\n                            </h3>\r\n                        <h3 className=\"product-brand\">{props.product.brand}</h3>\r\n                        <span className=\"product-price\">Rs. {Number(props.product.price.final_price).toFixed(2)}</span>                  \r\n                    </div>\r\n\r\n                    <div className=\"product-right-column\">\r\n                        <span className=\"product-color\">{props.product.colour.title}</span>\r\n                        <button className=\"button--primary\" onClick={addToCartHandler} >Add To Cart</button>                 \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProductItem;","import React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectBrands, selectColors } from \"../../actions/products\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Filter (props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [minPrice, setMinPrice] = useState([]);\r\n    const [maxPrice, setMaxPrice] = useState([]);\r\n\r\n    const [colours, setColours] = useState([]);\r\n    const [brands, setBrands] = useState([]);\r\n    const [discounts, setDiscounts] = useState([]);\r\n\r\n    const { productList, selectedColors, selectedBrands } = useSelector(state => state.products);\r\n\r\n    useEffect(()=>{\r\n        const _colours = {};\r\n        const _brands = [];\r\n        const _disounts = [];\r\n        let _maxDisount = 0;\r\n        productList.forEach((element) => {\r\n            _brands.push(element.brand);\r\n            _colours[element.colour.color] = element.colour.title;\r\n            if(_maxDisount < element.discount){\r\n                _maxDisount = element.discount;\r\n            }\r\n        });\r\n\r\n        setBrands([...new Set(_brands)]);\r\n        setColours(Object.entries(_colours));\r\n        \r\n        //Min and Max discounts\r\n        for(let i= 10; i < _maxDisount+10; i+=10){\r\n            _disounts.push(i);\r\n        }\r\n        setDiscounts(_disounts);\r\n\r\n    }, [productList]);\r\n\r\n\r\n    useEffect(()=>{\r\n        axios.get('https://xebiascart.herokuapp.com/filters')\r\n                    .then(res => {\r\n                       if(res.data.length && res.data[2]){\r\n                            const _minPrice =  res.data[2].values.filter(item=> item.key !== 'Max');\r\n                            const _maxPrice =  res.data[2].values.filter(item=> item.key !== 'Min');\r\n                            setMinPrice(_minPrice);\r\n                            setMaxPrice(_maxPrice);\r\n                       }\r\n                     })\r\n\r\n    }, []);\r\n\r\n\r\n   const onChangeBrand = (brandName) => event => {\r\n\r\n        const _selectedBrands = selectedBrands;\r\n        const index = _selectedBrands.indexOf(brandName);\r\n        if(index === -1){  \r\n            _selectedBrands.push(brandName); \r\n        } else {\r\n            _selectedBrands.splice( index, 1 );\r\n        }\r\n\r\n        dispatch(selectBrands([...new Set(_selectedBrands)]));\r\n\r\n    }\r\n\r\n    const onChangeColor = (color) => event => {\r\n\r\n        const _selectedColors = selectedColors;\r\n        const index = _selectedColors.indexOf(color);\r\n        if(index === -1){  \r\n            _selectedColors.push(color); \r\n        } else {\r\n            _selectedColors.splice( index, 1 );\r\n        }\r\n        \r\n        dispatch(selectColors([...new Set(_selectedColors)]));\r\n\r\n\r\n    }\r\n    \r\n    \r\n    \r\n    return(\r\n        <div className=\"filters-container\">\t\r\n             <div className=\"filters-header\"><h3>Filters</h3></div>\t\t\t\t\r\n             <form>\t\t\t\t\t\r\n                <div className=\"filters-item\"><h4>Colour</h4>\r\n                    <ul>\r\n                        {colours &&\r\n                            colours.map(([key, value]) =>\r\n                                <li key={key}>\r\n                                    <label>                                      \r\n                                        <input \r\n                                            type=\"checkbox\" \r\n                                            value={key}\r\n                                            onChange={onChangeColor(value)}  \r\n                                            checked={selectedColors && selectedColors.indexOf(value) !== -1?true:false}\r\n                                       />\r\n                                        <span>{value}</span>\r\n                                    </label>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul> \r\n                    </div>\r\n\r\n                    <div className=\"filters-item\"><h4>Brand</h4>\r\n                        <ul>\r\n                            {brands &&\r\n                                brands.map((brand) =>\r\n                                    <li key={brand}>\r\n                                        <label>\r\n                                            <input \r\n                                                type=\"checkbox\" \r\n                                                value={brand}\r\n                                                onChange={onChangeBrand(brand)} \r\n                                                checked={selectedBrands && selectedBrands.indexOf(brand) !== -1?true:false}\r\n                                            />\r\n                                            <span>{brand}</span>\r\n                                        </label>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        </ul> \r\n                    </div>\r\n\r\n                    <div className=\"filters-item\">\r\n                         <h4>Price</h4>\r\n                        <div className=\"dropldown-filters\">\r\n                            <select name=\"min_price\" aria-label=\"minimum price\">\r\n                                {minPrice.map(item =>\r\n                                        <option value={item.key}  key={`min-${item.key}`}>{item.displayValue}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                            <select name=\"max_price\" aria-label=\"maximum price\">\r\n                                <option value=\"Max\" key=\"max\">Max</option>\r\n                                {maxPrice.map(item =>\r\n                                        <option value={item.key} key={`max-${item.key}`}>{item.displayValue}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"filters-item dropldown-filters\">\r\n                       <h4>Discount</h4>\r\n                            <div className=\"dropldown-filters\">\r\n                                <select name=\"min_price\" aria-label=\"minimum discount\">\r\n                                    <option value=\"0\" key=\"min\">Min</option>\r\n                                    {discounts.map(item =>\r\n                                            <option value={item} key={`min-${item}`}>{item}%</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                                <select name=\"max_price\" aria-label=\"maximum discount\">\r\n                                    <option value={discounts[discounts.length-1]} key=\"max\">Max</option>\r\n                                    {discounts.map(item =>\r\n                                            <option value={item} key={`max-${item}`}>{item}%</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                    </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, {useState, useEffect} from 'react';\r\nimport { getAllProducts} from \"../../actions/products\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ProductItem from './ProductItem.js';\r\nimport Filter from './Filter.js';\r\nimport './product.scss';\r\n\r\nfunction Products (props) {\r\n\r\n    const { productList } = useSelector(state => state.products);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n         dispatch(getAllProducts());\r\n    }, []);\r\n\r\n\r\n\r\n    return(\t\r\n        <>\r\n            <Filter  />\t\t\r\n            <div className=\"product-container\">\r\n                {productList.length > 0 ?\r\n                productList.map(product => \r\n                    <ProductItem key={product.id} product={product} />\r\n                )\r\n                :  <div className=\"no-results\" >No results found.</div>\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Products;"],"sourceRoot":""}